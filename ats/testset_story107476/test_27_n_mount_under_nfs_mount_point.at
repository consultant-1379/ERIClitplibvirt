#############################################################
#	TORF-107476: As a LITP User i want my VM to mount a tmpfs
#	filesystem in order to facilitate Kafka persistence
#
#	Decription:
#		Test to verify that as a user i can create a new
#		vm-ram-disk item and have its mount point underneath
#		another nfs mount
#
#	Steps:
#		1. Create nfs file system on a VM with specific mount
#		point declared
#		2. Create vm-ram-mount item on a VM using a mount point
#		underneath a nfs mount point
#		3. Create plan
#		4. Assert Validation errors are received during create plan
#
#	Expected Result:
#		Plan returns with errors due to nested VM mount points
#############################################################

runLitpScript ../basic_deployment.atlib

# Create two vms
litp create -t vm-image -p /software/images/image1 -o name="fmmed" source_uri="http://ms1/images/fmmed-1.0.1.qcow2"
litp create -t vm-service -p /software/services/fmmed1 -o service_name=fmmed1 image_name=fmmed cpus=1 ram=128M internal_status_check=off
litp create -t clustered-service -p /deployments/test/clusters/cluster1/services/fmmed1 -o name=fmmed1 active=1 standby=1 node_list='node_1,node_2'
litp inherit -s /software/services/fmmed1 -p /deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed

# Step 1: Create nfs file system on a VM with specific mount point declared
litp create -t vm-nfs-mount -p /software/services/fmmed1/vm_nfs_mounts/mnt_1 -o device_path='nas4:/vx/tmp-mnt_1' mount_point="/tmp/mnt_1" mount_options='retrans=8,rsize=32768'

# Step 2: Create vm-ram-disk item on a VM using a mount point underneath a nfs mount point
litp create -t vm-ram-mount -p /software/services/fmmed1/vm_ram_mounts/mnt_2 -o type=tmpfs mount_point="/tmp/mnt_1/ram_mnt_1"

# Step 3: Create plan
# Step 4: Assert Validtion errors are received during create plan
let __error1 --err_vpath '/deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed/vm_nfs_mounts/mnt_1' --err_type ValidationError --err_message 'The "mount_point" property "/tmp/mnt_1/" is already defined. The mount point must be unique within the VM.'
let __error2 --err_vpath '/deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed/vm_ram_mounts/mnt_2' --err_type ValidationError --err_message 'The "mount_point" property "/tmp/mnt_1/" is already defined. The mount point must be unique within the VM.'
assertError __error1 __error2 create_plan