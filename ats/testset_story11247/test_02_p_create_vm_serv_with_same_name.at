runLitpScript ../common_setup.atlib
# Test Case 02.

# Test to verify that if a user deletes a VCS clustered service with a VM service,
# then creates a new VCS clustered service containing a VM service
# with different service name and the same properties values from beforehand,
# the plan should run successfully

# Initial setup

# 1. Create a VCS Clustered Service with VM defined by name convention (i.e. CS1, vm-service-1).

runLitpScript ../basic_deployment_with_bridge.atlib

litp create -t vm-image -p /software/images/image1 -o name="fmmed" source_uri="http://ms1/images/fmmed-1.0.1.qcow2"
litp create -t vm-service -p /software/services/fmmed1 -o service_name=fmmed1 image_name=fmmed cpus=1 ram=128M internal_status_check=off
litp create -t clustered-service -p /deployments/test/clusters/cluster1/services/fmmed1 -o name=fmmed1 active=1 standby=1 node_list='node_1,node_2'

litp inherit -s /software/services/fmmed1 -p /deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed

litp create -t vm-network-interface -p /software/services/fmmed1/vm_network_interfaces/net1 -o network_name=mgmt device_name=eth0 host_device=br0 ipaddresses="10.10.10.51"

litp create_plan
litp run_plan

# 2. Remove VCS clustered with VMs.

litp remove -p /deployments/test/clusters/cluster1/services/fmmed1

# 3. Create a new VCS Clustered Service with different service name and the same properties values from beforehand.

litp create -t vm-service -p /software/services/fmmed2 -o service_name=fmmed2 image_name=fmmed cpus=1 ram=128M internal_status_check=off
litp create -t clustered-service -p /deployments/test/clusters/cluster1/services/fmmed2 -o name=fmmed2 active=1 standby=1 node_list='node_1,node_2'

litp inherit -s /software/services/fmmed2 -p /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed
litp create -t vm-network-interface -p /software/services/fmmed2/vm_network_interfaces/net1 -o network_name=mgmt device_name=eth0 host_device=br0 ipaddresses="10.10.10.51"

# 4. Create/ Run plan

litp create_plan

assertConfigTask mn2 libvirt::deconfigure mn2deconfigurefmmed1 /deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed instance_name='fmmed1' base_os='rhel6'
assertConfigTask mn1 libvirt::deconfigure mn1deconfigurefmmed1 /deployments/test/clusters/cluster1/services/fmmed1/applications/fmmed instance_name='fmmed1' base_os='rhel6'
assertConfigTask mn2 libvirt::copy_file mn2imagefmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/images/' file_name='fmmed-1.0.1.qcow2' source_file_path='http://ms1/images/fmmed-1.0.1.qcow2' instance_name='fmmed2' latest_checksum='34d3e5f564534edf3458e8d834567a21' base_os='rhel6'
assertConfigTask mn1 libvirt::copy_file mn1imagefmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/images/' file_name='fmmed-1.0.1.qcow2' source_file_path='http://ms1/images/fmmed-1.0.1.qcow2' instance_name='fmmed2' latest_checksum='34d3e5f564534edf3458e8d834567a21' base_os='rhel6'
assertConfigTask mn2 libvirt::write_file mn2metadatafmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='meta-data' content="instance-id: fmmed2\nnetwork-interfaces: 'auto eth0\n\n  iface eth0 inet static\n\n  address 10.10.10.51\n\n  network mgmt\n\n  netmask 255.255.255.0\n\n  broadcast 10.10.10.255\n\n  hwaddress 52:54:00:a9:3e:50\n\n  '\n"
assertConfigTask mn1 libvirt::write_file mn1configfmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='config.json' content="{\"version\": \"1.0.0\", \"vm_data\": {\"interfaces\": {\"eth0\": {\"host_device\": \"br0\", \"mac_address\": \"52:54:00:a9:3e:50\"}}, \"ram\": \"128M\", \"image-checksum\": \"34d3e5f564534edf3458e8d834567a21\", \"yum-checksum\": [], \"zypper-checksum\": [], \"cpu\": \"1\", \"image\": \"fmmed-1.0.1.qcow2\"}, \"adaptor_data\": {\"internal_status_check\": {\"active\": \"off\", \"ip_address\": \"\"}, \"disk_mounts\": []}}"
assertConfigTask mn1 libvirt::write_file mn1userdatafmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='user-data' content='\#cloud-config\nbootcmd:\n- - cloud-init-per\n  - instance\n  - hostname\n  - sh\n  - -c\n  - hostnamectl set-hostname fmmed2\nruncmd:\n- if [ -f /etc/init.d/rsyslog ]; then /sbin/service rsyslog restart; elif [ -f /usr/lib/systemd/system/rsyslog.service\n  ]; then /bin/systemctl restart rsyslog.service; elif [ -f /etc/init.d/syslog ];\n  then /sbin/service syslog restart; else exit 1; fi\n- if [ -f /bin/systemctl ]; then /bin/systemctl restart crond; fi\ntimezone: Europe/mock\n'
assertConfigTask mn2 libvirt::write_file mn2configfmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='config.json' content="{\"version\": \"1.0.0\", \"vm_data\": {\"interfaces\": {\"eth0\": {\"host_device\": \"br0\", \"mac_address\": \"52:54:00:a9:3e:50\"}}, \"ram\": \"128M\", \"image-checksum\": \"34d3e5f564534edf3458e8d834567a21\", \"yum-checksum\": [], \"zypper-checksum\": [],\"cpu\": \"1\", \"image\": \"fmmed-1.0.1.qcow2\"}, \"adaptor_data\": {\"internal_status_check\": {\"active\": \"off\", \"ip_address\": \"\"}, \"disk_mounts\": []}}"
assertConfigTask mn2 libvirt::write_file mn2userdatafmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='user-data' content='\#cloud-config\nbootcmd:\n- - cloud-init-per\n  - instance\n  - hostname\n  - sh\n  - -c\n  - hostnamectl set-hostname fmmed2\nruncmd:\n- if [ -f /etc/init.d/rsyslog ]; then /sbin/service rsyslog restart; elif [ -f /usr/lib/systemd/system/rsyslog.service\n  ]; then /bin/systemctl restart rsyslog.service; elif [ -f /etc/init.d/syslog ];\n  then /sbin/service syslog restart; else exit 1; fi\n- if [ -f /bin/systemctl ]; then /bin/systemctl restart crond; fi\ntimezone: Europe/mock\n'
assertConfigTask mn1 libvirt::write_file mn1metadatafmmed2 /deployments/test/clusters/cluster1/services/fmmed2/applications/fmmed target_path='/var/lib/libvirt/instances/fmmed2' file_name='meta-data' content="instance-id: fmmed2\nnetwork-interfaces: 'auto eth0\n\n  iface eth0 inet static\n\n  address 10.10.10.51\n\n  network mgmt\n\n  netmask 255.255.255.0\n\n  broadcast 10.10.10.255\n\n  hwaddress 52:54:00:a9:3e:50\n\n  '\n"


litp run_plan

# 5. Wait for successful completion.

assertPlanState successful
